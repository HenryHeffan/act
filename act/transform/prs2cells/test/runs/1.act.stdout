namespace cell {
export defcell g0x1 (bool in[2]; bool out);
export defcell g5x0 (bool? in[1]; bool! out);
export defcell g0x0 (bool in[2]; bool out);
export defcell g6x0 (bool? in[1]; bool! out);
export defcell g2x0 (bool in[2]; bool out);
export defcell g4x0 (bool in[2]; bool out);
export defcell p1 (bool? in[2]; bool! out);
export defcell g3x0 (bool in[3]; bool out);
export defcell g1x0 (bool in[2]; bool out);

export defcell g0x1 (bool in[2]; bool out)
{

/* instances */

/* connections */
prs {
in[0]<10>&in[1] => out-
}
}

export defcell g5x0 (bool? in[1]; bool! out)
{

/* instances */

/* connections */
prs {
in[0] -> out-
~in[0] -> out+
}
}

export defcell g0x0 (bool in[2]; bool out)
{

/* instances */

/* connections */
prs {
in[0]&in[1] => out-
}
}

export defcell g6x0 (bool? in[1]; bool! out)
{

/* instances */

/* connections */
prs {
in[0]<5> -> out-
~in[0] -> out+
}
}

export defcell g2x0 (bool in[2]; bool out)
{

/* instances */

/* connections */
prs {
in[0]&in[1] #> out-
}
}

export defcell g4x0 (bool in[2]; bool out)
{

/* instances */

/* connections */
prs {
in[0] -> out-
~in[0]&~in[1] -> out+
}
}

export defcell p1 (bool? in[2]; bool! out)
{

/* instances */

/* connections */
prs {
passp(in[0],in[1],out)
}
}

export defcell g3x0 (bool in[3]; bool out)
{

/* instances */

/* connections */
prs {
in[0]&in[1]&in[2] #> out-
}
}

export defcell g1x0 (bool in[2]; bool out)
{

/* instances */

/* connections */
prs {
in[0]|in[1] => out-
}
}


/* instances */

/* connections */
}
defproc foo (bool a; bool b);
defproc bar (bool p);

defproc foo (bool a; bool b)
{

/* instances */
::cell::g5x0 cx0;
::cell::p1 cx1;

/* connections */
b=cx1.out=cx1.in[1]=cx0.out;
a=cx1.in[0]=cx0.in[0];
}

defproc bar (bool p)
{

/* instances */
::cell::g3x0 cx0;
bool y;
bool x;
bool w;
bool q;
::cell::g6x0 cx1;

/* connections */
y=cx0.in[1];
x=cx1.in[0]=cx0.in[0];
w=cx1.out=cx0.in[2];
q=cx0.out;
}


/* instances */
foo f;
bar b;

/* connections */
